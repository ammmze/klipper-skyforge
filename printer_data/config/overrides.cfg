############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "extruder_heating", "purge", "clean", "z_offset", "bedmesh", "primeline"
variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "z_offset", "bedmesh", "custom1", "extruder_heating", "purge", "clean", "primeline"
gcode: # do not remove this line

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.

[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR


#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
# [probe]
# x_offset: -1.85
# y_offset: 29.3
# z_offset: 12.6

[stepper_y]
position_max: 356
position_endstop: 356

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25   # Point 1
   50,275  # Point 2
   300,275 # Point 3
   300,25  # Point 4

speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

# [filament_switch_sensor pre_extruder]
# switch_pin: ^toolhead:gpio22

# [filament_switch_sensor post_extruder]
# switch_pin: ^toolhead:gpio6

#[m226]

# Stress test homing ... try to trigger TTC
[gcode_macro _STRESS_TEST_HOMING]
variable_active: False
variable_counter: 0
gcode:
    {% set STOP = (params.STOP|default(0)|int) == 1 %}
    {% if STOP %}
        RESPOND TYPE=command MSG="action:prompt_end"
        SET_GCODE_VARIABLE MACRO=_STRESS_TEST_HOMING VARIABLE=active VALUE='False'
    {% else %}
        SET_GCODE_VARIABLE MACRO=_STRESS_TEST_HOMING VARIABLE=active VALUE='True'
        SET_GCODE_VARIABLE MACRO=_STRESS_TEST_HOMING VARIABLE=counter VALUE='0'
        UPDATE_DELAYED_GCODE ID=_STRESS_TEST_HOMING DURATION=0.3
    {% endif %}
   

[delayed_gcode _STRESS_TEST_HOMING]
gcode:
    {% set active = printer["gcode_macro _STRESS_TEST_HOMING"].active %}
    {% set counter = printer["gcode_macro _STRESS_TEST_HOMING"].counter %}
    {% if active %}
        {% set filter_name = 'canbus_stats' %}
        {% set filter_value = '' %}
        {% set show_cfg = 0 %}
        
        {% set out = [] %}

        {% for key1 in printer %}
            {% for key2 in printer[key1] %}
                {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                    {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
                {% endif %}
            {% else %}
                {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                    {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
                {% endif %}
            {% endfor %}
        {% endfor %}
        
        {action_respond_info(out|join("\n"))}
        RESPOND TYPE=command MSG="action:prompt_begin Stress Testing Homing"
        RESPOND TYPE=command MSG="action:prompt_text Running homing stress test. Current iteration {counter}"
        {% for line in out %}
            RESPOND TYPE=command MSG="action:prompt_text {line}"
        {% endfor %}
        RESPOND TYPE=command MSG="action:prompt_footer_button Stop|_STRESS_TEST_HOMING STOP=1"
        RESPOND TYPE=command MSG="action:prompt_show"
        SET_GCODE_VARIABLE MACRO=_STRESS_TEST_HOMING VARIABLE=counter VALUE='{counter+1}'
        G28
        UPDATE_DELAYED_GCODE ID=_STRESS_TEST_HOMING DURATION=0.3
    {% endif %}
