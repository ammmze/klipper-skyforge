[mcu cartographer]
# canbus_uuid: 0bd6ee04062e # green headers
canbus_uuid: acd8442fbb35 # black headers
restart_method: command

[scanner]
mcu: cartographer
#    adjust to suit your scanner, if using usb change to serial.
#    serial: /dev/serial/by-id/usb-cartographer_cartographer_
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.00508
# Median distance moving up 1.98826, down 1.99553, delta 0.00727 over 20 samples
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
# 
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 175, 175
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 35, 6
#    start point of bed mesh [X, Y]
mesh_max: 240, 198
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type:   temperature_mcu
sensor_mcu:            scanner
min_temp:                    0
max_temp:                  105

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

# [safe_z_home]
# home_xy_position: 175,175
# # Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
# z_hop: 10

[stepper_z]
endstop_pin: probe:z_virtual_endstop # uses cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
